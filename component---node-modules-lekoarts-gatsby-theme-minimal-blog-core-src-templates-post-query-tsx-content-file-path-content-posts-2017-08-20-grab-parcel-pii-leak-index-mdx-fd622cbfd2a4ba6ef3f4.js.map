{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-2017-08-20-grab-parcel-pii-leak-index-mdx-fd622cbfd2a4ba6ef3f4.js","mappings":"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","sources":["webpack://minimal-blog/./content/pages/about/LinkText.jsx","webpack://minimal-blog/./content/posts/2017-08-20-grab-parcel-pii-leak/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport tailwind from \"@theme-ui/preset-tailwind\"\n\nconst LinkText = ({ text, url }) => {\n\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  const textDecoration = isHovered ? 'underline' : 'none';\n\n  const [itemValue, setItemValue] = useState('');\n\n  useEffect(() => {\n    const handleStorageChange = (event) => {\n      const initialValue = localStorage.getItem('theme-ui-color-mode');\n      if (initialValue) {\n        console.log(initialValue)\n        setItemValue(initialValue);\n      }\n    };\n\n    // Add event listener to observe storage changes\n    window.addEventListener('click', handleStorageChange);\n\n    // Retrieve initial value from localStorage\n    const initialValue = localStorage.getItem('theme-ui-color-mode');\n    if (initialValue) {\n      setItemValue(initialValue);\n    }\n\n    return () => {\n      // Clean up the event listener on component unmount\n      window.removeEventListener('click', handleStorageChange);\n    };\n  }, []);\n\n  const style = {\n    color: itemValue === 'dark' ? tailwind.colors.purple[5] : tailwind.colors.purple[7],\n    textDecoration: textDecoration\n  };\n\n  return (\n    <a style={style} href={url} target=\"_blank\" rel=\"nofollow noopener noreferrer\" onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}>\n      {text}\n    </a>\n  );\n};\n\nexport default LinkText;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport LinkText from '../../pages/about/LinkText';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    a: \"a\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"While checking out \", React.createElement(LinkText, {\n    text: \"Grab Parcel\",\n    url: \"https://parcel.grab.com\"\n  }), \" website, I found a link that looked a bit suspicious to me as it was from a different domain.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"https://app.detrack.com/tracking/46678ef7c208d1f8a43379ec15624d5b12c545ad\\n\")), \"\\n\", React.createElement(_components.p, null, \"Grab Parcel was dependent on a 3rd party \", React.createElement(_components.strong, null, \"Detrack\"), \" for delivery and tracking of the items. And to get the order details it required just one field, the Tracking ID. This means if I’m able to get a tracking id, I might be able to extract some sensitive PII information.\"), \"\\n\", React.createElement(_components.p, null, \"To get the tracking id, I checked out Twitter and found dozens of tracking numbers reported by customers to the Grab support. By using one of them, I was presented with a lot of juicy information about the customer. I was even able to download a PDF of the order details from that tracking Id. The PDF consisted of customer’s \", React.createElement(_components.strong, null, \"Mobile Number, Full Address with latitude and longitude, their image, their signature and what did they order.\")), \"\\n\", React.createElement(_components.p, null, \"To make this report critical, it was required me to brute force the tracking numbers. It took me a while as the tracking numbers were following a different pattern and spending some time over that, I was able to find hundreds of tracking ids in a few mins. Too much of sensitive data lying around.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Beware!\"), \"\\nNever share your Tracking/Order ID publicly. You never know, how much sensitive information you're sharing in open.\"), \"\\n\", React.createElement(_components.p, null, \"I hope you liked my first blog post, another one coming soon on \", React.createElement(_components.a, {\n    href: \"/blog/2017/08/20/zomato-account-takeover-using-facebook-id/\"\n  }, \"Zomato Account Takeover using Victim's Facebook ID\")), \"\\n\", React.createElement(_components.h1, null, \"Timeline\"), \"\\n\", React.createElement(_components.p, null, \"Jul 17 - Submitted Report\"), \"\\n\", React.createElement(_components.p, null, \"Jul 17 - Response from Grab, Need More Info\"), \"\\n\", React.createElement(_components.p, null, \"Jul 17 - Submitted another PoC\"), \"\\n\", React.createElement(_components.p, null, \"Jul 17 - Triaged\"), \"\\n\", React.createElement(_components.p, null, \"Jul 18 - Fixed\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Reward: $3,000\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/bhavukjain1/Documents/personal/github/gatsby_personal_blog/content/posts/2017-08-20-grab-parcel-pii-leak/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","text","url","isHovered","setIsHovered","useState","textDecoration","itemValue","setItemValue","useEffect","handleStorageChange","event","initialValue","localStorage","getItem","console","log","window","addEventListener","removeEventListener","style","color","tailwind","purple","React","href","target","rel","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","_createMdxContent","props","_components","Object","assign","p","pre","code","strong","a","h1","_provideComponents","components","LinkText","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}