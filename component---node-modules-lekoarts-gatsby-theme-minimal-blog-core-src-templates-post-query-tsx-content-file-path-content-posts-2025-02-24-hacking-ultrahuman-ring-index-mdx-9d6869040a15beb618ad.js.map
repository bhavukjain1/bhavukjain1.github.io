{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-2025-02-24-hacking-ultrahuman-ring-index-mdx-9d6869040a15beb618ad.js","mappings":"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","sources":["webpack://minimal-blog/./content/pages/about/LinkText.jsx","webpack://minimal-blog/./content/posts/2025-02-24-hacking-ultrahuman-ring/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport tailwind from \"@theme-ui/preset-tailwind\"\n\nconst LinkText = ({ text, url }) => {\n\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  const textDecoration = isHovered ? 'underline' : 'none';\n\n  const [itemValue, setItemValue] = useState('');\n\n  useEffect(() => {\n    const handleStorageChange = (event) => {\n      const initialValue = localStorage.getItem('theme-ui-color-mode');\n      if (initialValue) {\n        console.log(initialValue)\n        setItemValue(initialValue);\n      }\n    };\n\n    // Add event listener to observe storage changes\n    window.addEventListener('click', handleStorageChange);\n\n    // Retrieve initial value from localStorage\n    const initialValue = localStorage.getItem('theme-ui-color-mode');\n    if (initialValue) {\n      setItemValue(initialValue);\n    }\n\n    return () => {\n      // Clean up the event listener on component unmount\n      window.removeEventListener('click', handleStorageChange);\n    };\n  }, []);\n\n  const style = {\n    color: itemValue === 'dark' ? tailwind.colors.purple[5] : tailwind.colors.purple[7],\n    textDecoration: textDecoration\n  };\n\n  return (\n    <a style={style} href={url} target=\"_blank\" rel=\"nofollow noopener noreferrer\" onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}>\n      {text}\n    </a>\n  );\n};\n\nexport default LinkText;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport LinkText from '../../pages/about/LinkText';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Imagine wearing a smart ring that tracks your health data—your heart rate, sleep patterns, and activity levels. Now, what if I told you that someone standing near you could hijack your ring, steal your private health data, and even modify it—all without your knowledge?\"), \"\\n\", React.createElement(_components.p, null, \"This is exactly what I discovered in the \", React.createElement(_components.strong, null, \"UltraHuman (UH) smart ring\"), \" due to a flaw in its Bluetooth implementation. The issue? \", React.createElement(_components.strong, null, \"No authentication during pairing - really??\"), \". This allows an attacker to take over your ring and gain full access to read and modify its data.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"The Vulnerability Explained\")), \"\\n\", React.createElement(_components.p, null, \"Many Bluetooth devices require authentication to prevent unauthorized access. However, the \", React.createElement(_components.strong, null, \"UH ring does not\"), \". Once your phone disconnects, \", React.createElement(_components.strong, null, \"anyone nearby can pair with your ring using the UH app\"), \", gaining complete control over your health data.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Steps to Exploit the Issue\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"Victim’s Side:\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"A user pairs their UltraHuman ring with their \", React.createElement(_components.strong, null, \"phone\"), \" and keeps the phone locked.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Attacker’s Side:\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Using another device, the attacker opens the UH app and tries to pair a new device.\"), \"\\n\", React.createElement(_components.li, null, \"They keep trying until \", React.createElement(_components.strong, null, \"a pairing popup appears\"), \" for the UH ring.\"), \"\\n\", React.createElement(_components.li, null, \"Once paired, the attacker gains \", React.createElement(_components.strong, null, \"full read and write access\"), \" to the ring’s data.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Why This Happens -\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The UH ring \", React.createElement(_components.strong, null, \"does not maintain a constant Bluetooth connection\"), \" with the original phone.\"), \"\\n\", React.createElement(_components.li, null, \"Once the victim’s phone is locked or Bluetooth disconnects, the ring becomes available for \", React.createElement(_components.strong, null, \"anyone to pair with\"), \".\"), \"\\n\", React.createElement(_components.li, null, \"Since there is \", React.createElement(_components.strong, null, \"no authentication\"), \", the attacker can simply connect and take control.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Who Can Exploit This?\")), \"\\n\", React.createElement(_components.p, null, \"Anyone within Bluetooth range (2-3 meters) can:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Steal health data – Read heart rate, sleep stats, and other personal metrics.\"), \"\\n\", React.createElement(_components.li, null, \"Modify data – Unpair a device, potentially tamper with health records, which could have serious consequences.\"), \"\\n\", React.createElement(_components.li, null, \"Disrupt tracking – Reset or delete logged health data.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Conclusion\")), \"\\n\", React.createElement(_components.p, null, \"UltraHuman markets its ring as one of the best smart rings in the world, offering top-tier usability and advanced health tracking features. However, at a premium price of ₹28,499 (approximately $330 USD), users rightfully expect basic security standards to protect their sensitive health data.\"), \"\\n\", React.createElement(_components.p, null, \"A lack of authentication in Bluetooth pairing is a serious security flaw, allowing attackers to hijack the ring, steal health data, and even modify it. Until UltraHuman addresses this issue, would you still feel safe buying and using the UH ring?\"), \"\\n\", React.createElement(_components.p, null, \"Here's a video demonstrating this attack -\"), \"\\n\", React.createElement(_components.p, null, \"Youtube - \", React.createElement(LinkText, {\n    text: \"https://www.youtube.com/watch?v=j0GN5_Rd-FE\",\n    url: \"https://www.youtube.com/watch?v=j0GN5_Rd-FE\"\n  })));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/bhavukjain1/Documents/work/github/gatsby_personal_blog/content/posts/2025-02-24-hacking-ultrahuman-ring/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","text","url","isHovered","setIsHovered","useState","textDecoration","itemValue","setItemValue","useEffect","handleStorageChange","event","initialValue","localStorage","getItem","console","log","window","addEventListener","removeEventListener","style","color","tailwind","purple","React","href","target","rel","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","_createMdxContent","props","_components","Object","assign","p","strong","ol","li","ul","_provideComponents","components","LinkText","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}