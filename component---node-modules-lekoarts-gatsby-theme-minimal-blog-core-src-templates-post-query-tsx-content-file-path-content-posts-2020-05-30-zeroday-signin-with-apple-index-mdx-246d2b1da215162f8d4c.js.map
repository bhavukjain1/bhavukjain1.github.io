{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-2020-05-30-zeroday-signin-with-apple-index-mdx-246d2b1da215162f8d4c.js","mappings":"kNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,IAAK,MACLC,EAAG,IACHC,KAAM,OACNC,OAAQ,SACRC,WAAY,aACZC,IAAK,QACJC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,IAAK,CACpFS,IAAK,oEACLC,IAAK,UACH,KAAMF,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,sJAAuJO,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,sBAAuB,sBAAuB,KAAMM,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,gDAAiDO,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,sBAAuB,8JAA+JM,EAAAA,cAAoBX,EAAYM,OAAQ,KAAM,0CAA2C,6FAA8F,KAAMK,EAAAA,cAAoBX,EAAYO,WAAY,KAAM,KAAMI,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,mGAAoG,MAAO,KAAMO,EAAAA,cAAoBX,EAAYI,EAAG,KAAMO,EAAAA,cAAoBX,EAAYM,OAAQ,KAAM,sBAAuB,KAAMK,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,OAAQO,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,sBAAuB,uGAAwGM,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,wBAAyB,SAAUM,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,QAAS,oJAAqJ,KAAMM,EAAAA,cAAoBX,EAAYG,IAAK,CACvoDS,IAAK,+EACLC,IAAK,UACH,KAAMF,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,4ZAA6Z,KAAMO,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,4CAA6C,KAAMO,EAAAA,cAAoBX,EAAYQ,IAAK,KAAMG,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,8VAAiY,KAAMM,EAAAA,cAAoBX,EAAYI,EAAG,KAAMO,EAAAA,cAAoBX,EAAYM,OAAQ,KAAMK,EAAAA,cAAoBX,EAAYM,OAAQ,KAAM,SAAU,KAAMK,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,mRAAoR,KAAMO,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,6BAA8B,KAAMO,EAAAA,cAAoBX,EAAYQ,IAAK,KAAMG,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,kGAAuG,KAAMM,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,uBAAwBO,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,SAAU,0EAA2E,KAAMM,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,mBAAoB,KAAMO,EAAAA,cAAoBX,EAAYQ,IAAK,KAAMG,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,yRAAkT,KAAMM,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,2IAA4IO,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,sBAAuB,oGAAqGM,EAAAA,cAAoBX,EAAYK,KAAM,KAAM,sBAAuB,6OAA8O,KAAMM,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,qIAAsI,KAAMO,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,6CAA8C,KAAMO,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,mDACp2G,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWhB,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,E,UCnBe,SAASiB,EAAiBjB,GACvC,OAAOY,EAAAA,cAAoBM,EAAAA,EAAelB,EAAOY,EAAAA,cAAoBO,EAAqBnB,GAC5F,CAHAkB,EAAAA,C","sources":["webpack://minimal-blog/./content/posts/2020-05-30-zeroday-signin-with-apple/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    img: \"img\",\n    p: \"p\",\n    code: \"code\",\n    strong: \"strong\",\n    blockquote: \"blockquote\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.img, {\n    src: \"https://ik.imagekit.io/dzhosd8qx/siwa.png?updatedAt=1689658397671\",\n    alt: \"image\"\n  }), \"\\n\", React.createElement(_components.p, null, \"What if I say, your Email ID is all I need to takeover your account on your favorite website or an app. Sounds scary, right? This is what a bug in \", React.createElement(_components.code, null, \"Sign in with Apple\"), \" allowed me to do.\"), \"\\n\", React.createElement(_components.p, null, \"In the month of April, I found a zero-day in \", React.createElement(_components.code, null, \"Sign in with Apple\"), \" that affected third-party applications which were using it and didn't implement their own additional security measures. This bug could have resulted in a \", React.createElement(_components.strong, null, \"full account takeover of user accounts\"), \" on that third party application irrespective of a victim having a valid Apple ID or not.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"For this vulnerability, I was paid $100,000 by Apple under their Apple Security Bounty program.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Technical Details\")), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.code, null, \"Sign in with Apple\"), \" works similarly to OAuth 2.0. There are two possible ways to authenticate a user by either using a \", React.createElement(_components.code, null, \"JWT (JSON Web Token)\"), \" or a \", React.createElement(_components.code, null, \"code\"), \" generated by the Apple server. The code is then used to generate a JWT. The below diagram represents how the JWT creation and validation works.\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://ik.imagekit.io/dzhosd8qx/flow_apple_auth.png?updatedAt=1689658397583\",\n    alt: \"image\"\n  }), \"\\n\", React.createElement(_components.p, null, \"In the 2nd step, while authorizing, Apple gives an option to a user to either share the Apple Email ID with the 3rd party app or not. If the user decides to hide the Email ID, Apple generates its own user-specific Apple relay Email ID. Depending upon the user selection, after successful authorization, Apple creates a JWT which contains this Email ID which is then used by the 3rd party app to login a user.\"), \"\\n\", React.createElement(_components.p, null, \"A decoded JWT's payload looks like this:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"{\\n  \\\"iss\\\": \\\"https://appleid.apple.com\\\",\\n  \\\"aud\\\": \\\"com.XXXX.weblogin\\\",\\n  \\\"exp\\\": 158XXXXXXX,\\n  \\\"iat\\\": 158XXXXXXX,\\n  \\\"sub\\\": \\\"XXXX.XXXXX.XXXX\\\",\\n  \\\"c_hash\\\": \\\"FJXwx9EHQqXXXXXXXX\\\",\\n  \\\"email\\\": \\\"contact@bhavukjain.com\\\", // or \\\"XXXXX@privaterelay.appleid.com\\\"\\n  \\\"email_verified\\\": \\\"true\\\",\\n  \\\"auth_time\\\": 158XXXXXXX,\\n  \\\"nonce_supported\\\": true\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, React.createElement(_components.strong, null, \"BUG\"))), \"\\n\", React.createElement(_components.p, null, \"I found I could request JWTs for any Email ID from Apple and when the signature of these tokens was verified using Appleâ€™s public key, they showed as valid. This means an attacker could forge a JWT by linking any Email ID to it and gaining access to the victim's account.\"), \"\\n\", React.createElement(_components.p, null, \"Sample Request (2nd step)\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"\\nPOST /XXXX/XXXX HTTP/1.1\\nHost: appleid.apple.com\\n\\n{\\\"email\\\":\\\"contact@bhavukjain.com\\\"}\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"Here on passing any \", React.createElement(_components.code, null, \"email\"), \", Apple generated a valid JWT (id_token) for that particular Email ID.\"), \"\\n\", React.createElement(_components.p, null, \"Sample Response\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"{\\n  \\\"authorization\\\" : {\\n    \\\"id_token\\\" : \\\"eyJraWQiOiJlWGF1bm1MIiwiYWxnIjoiUlMyNTYifQ.XXXXX.XXXXX\\\",\\n    \\\"grant_code\\\" : \\\"XXX.0.nzr.XXXX\\\",\\n    \\\"scope\\\" : [ \\\"name\\\", \\\"email\\\" ]\\n  },\\n  \\\"authorizedData\\\" : {\\n    \\\"userId\\\" : \\\"XXX.XXXXX.XXXX\\\"\\n  },\\n  \\\"consentRequired\\\" : false\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"The impact of this vulnerability was quite critical as it could have allowed full account takeover. A lot of developers have integrated \", React.createElement(_components.code, null, \"Sign in with Apple\"), \" since it is mandatory for applications that support other social logins. To name a few that use \", React.createElement(_components.code, null, \"Sign in with Apple\"), \" - Dropbox, Spotify, Airbnb, Giphy (Now acquired by Facebook). These applications were not tested but could have been vulnerable to a full account takeover if there weren't any other security measures in place while verifying a user.\"), \"\\n\", React.createElement(_components.p, null, \"Apple also did an investigation of their logs and determined there was no misuse or account compromise due to this vulnerability.\"), \"\\n\", React.createElement(_components.p, null, \"A huge thanks to the Apple Security Team.\"), \"\\n\", React.createElement(_components.p, null, \"Thanks for the read, see you in next article :)\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/bhavukjain1/Documents/work/github/gatsby_personal_blog/content/posts/2020-05-30-zeroday-signin-with-apple/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_createMdxContent","props","_components","Object","assign","img","p","code","strong","blockquote","pre","_provideComponents","components","React","src","alt","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}